{
	"mainTitle": "Ant Colony",
	"instructions": {
	    "title": "Instructions",
        "begin": "Begin"
    },
	"editor": {
        "title": "Editor",
    	"reset": "Reset",
    	"play": "Play"
    },
    "starterCode": {
        "title": "Starter code",
        "templateCode": "The starter code for this level is:"
    },
	"game": "Game",
    "levelComplete": "Level complete!",

	"DistanceToFood": {
        "instructions": "TODO: DistanceToFood instructions",
        "starter_code": [
            "function euclidian_distance(ant_x, ant_y, obj_x, obj_y) {",
            "    // Your code here!",
            "};"
        ]
    },
    "DirectionOfFood": {
        "instructions": "TODO: DirectionToFood instructions",
        "starter_code": [
            "function angle_to_object(ant, food) {",
            "    // Compute the angle between (ant.x, ant.y)",
            "    // and (food.x, food.y), in radians.",
            "};"
        ]
    },
    "IsFoodEdible": {
        "instructions": "TODO: IsFoodEdible instructions",
        "starter_code": [
            "function is_edible(food) {",
            "    // A fruit that is not poisoned (food.poison)",
            "    // and that is less than two days old (food.age)",
            "    // is edible.",
            "};"
        ]
    },
    "ChooseClosestFood": {
        "instructions": "TODO: ChooseClosestFood instructions",
        "starter_code": [
            "function euclidean_distance(ant, food) {",
            "    var d1 = ant.x - food.x;",
            "    var d2 = ant.y - food.y;",
            "    return Math.sqrt(d1 * d1 + d2 * d2);",
            "};",
            "",
            "function choose_closest(ant, foodsList) {",
            "    // Use the function euclidean_distance to find the closest",
            "    // food in the given list foodsList. Return the closest food.",
            "};"
        ]
    }
}
